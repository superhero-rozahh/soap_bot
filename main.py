from flask import Flask, request
from twilio.twiml.messaging_response import MessagingResponse
from dotenv import load_dotenv
import psycopg2
import os
import datetime

load_dotenv()

app = Flask(__name__)

# PostgreSQL connection
conn = psycopg2.connect(os.getenv("DATABASE_URL"))
cursor = conn.cursor()

# In-memory user session state
user_state = {}

@app.route("/", methods=["GET"])
def health():
    return "‚úÖ App is running!"

@app.route("/whatsapp", methods=["POST"])
def whatsapp():
    from_number = request.form.get("From")
    user_msg = request.form.get("Body").strip()

    print(f"[{datetime.datetime.now()}] From: {from_number}, Msg: {user_msg}")

    state = user_state.get(from_number, {"step": "–º–µ–Ω—é"})
    print(f"[{datetime.datetime.now()}] State Step: {state.get('step')}")

    resp = MessagingResponse()
    msg = resp.message()

    if user_msg.lower() in ("–ø—Ä–∏–≤–µ—Ç", "–º–µ–Ω—é", "–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ"):
        state = {"step": "–º–µ–Ω—é"}
        msg.body(
            "üëã –ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à WhatsApp-–º–∞–≥–∞–∑–∏–Ω –º—ã–ª–∞-–ø–µ–Ω–∫–∏!\n\n"
            "üåø –ù–µ–∂–Ω–∞—è –ø–µ–Ω–∞, –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π —Å–æ—Å—Ç–∞–≤ –∏ —É–¥–æ–±–Ω—ã–π —Ñ–ª–∞–∫–æ–Ω ‚Äî –≤—Å—ë, —á—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è –∑–∞–±–æ—Ç—ã –æ —Å–µ–±–µ.\n\n"
            "–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?\n\n"
            "1Ô∏è‚É£ –ó–∞–∫–∞–∑–∞—Ç—å –º—ã–ª–æ\n"
            "2Ô∏è‚É£ –£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ\n\n"
            "–í–≤–µ–¥–∏—Ç–µ 1 –∏–ª–∏ 2:"
        )
        user_state[from_number] = state
        return str(resp)

    if state["step"] == "–º–µ–Ω—é":
        if user_msg == "1":
            state["step"] = "ask_quantity"
            msg.body("–û—Ç–ª–∏—á–Ω–æ! üßº –°–∫–æ–ª—å–∫–æ —à—Ç—É–∫ –º—ã–ª–∞ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å?")
        elif user_msg == "2":
            msg.body(
                "‚ÑπÔ∏è –ù–∞—à–∞ –º—ã–ª–æ-–ø–µ–Ω–∫–∞:\n\n"
                "- –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ –∫–æ–∂–∏\n"
                "- –ë–µ–∑ —Å—É–ª—å—Ñ–∞—Ç–æ–≤ –∏ –ø–∞—Ä–∞–±–µ–Ω–æ–≤\n"
                "- –û–±—ä—ë–º: 150 –º–ª\n"
                "- –¶–µ–Ω–∞: 1800‚Ç∏ –∑–∞ 1 —à—Ç—É–∫—É\n\n"
                "–ù–∞–ø–∏—à–∏—Ç–µ '–º–µ–Ω—é', —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥."
            )
        else:
            msg.body("‚ùó –í–≤–µ–¥–∏—Ç–µ 1 —á—Ç–æ–±—ã –∑–∞–∫–∞–∑–∞—Ç—å –∏–ª–∏ 2 —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ.")
        user_state[from_number] = state
        return str(resp)

    if state["step"] == "ask_quantity":
        if user_msg.isdigit():
            quantity = int(user_msg)
            price = quantity * 1800
            state.update({
                "quantity": quantity,
                "price": price,
                "step": "ask_name"
            })
            msg.body(f"–•–æ—Ä–æ—à–æ, {quantity} —à—Ç—É–∫ –±—É–¥–µ—Ç —Å—Ç–æ–∏—Ç—å {price}‚Ç∏.\n\n2Ô∏è‚É£ –£–∫–∞–∂–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–∞—à–µ –∏–º—è:")
        else:
            msg.body("‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.")
        user_state[from_number] = state
        return str(resp)

    if state["step"] == "ask_name":
        name = user_msg.strip().title()
        state.update({
            "name": name,
            "step": "ask_address"
        })
        msg.body(f"–°–ø–∞—Å–∏–±–æ, {name}!\n\n3Ô∏è‚É£ –£–∫–∞–∂–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏:")
        user_state[from_number] = state
        return str(resp)

    if state["step"] == "ask_address":
        address = user_msg.strip()
        state.update({
            "address": address,
            "step": "ask_phone"
        })
        msg.body("4Ô∏è‚É£ –£–∫–∞–∂–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
        user_state[from_number] = state
        return str(resp)

    if state["step"] == "ask_phone":
        phone = user_msg.strip()
        name = state["name"]
        quantity = state["quantity"]
        price = state["price"]
        address = state["address"]

        cursor.execute(
            "INSERT INTO orders (name, quantity, price, address, phone) VALUES (%s, %s, %s, %s, %s)",
            (name, quantity, price, address, phone)
        )
        conn.commit()

        msg.body(
            f"‚úÖ –í—Å—ë –≥–æ—Ç–æ–≤–æ! –ó–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç:\n\n"
            f"–ò–º—è: {name}\n"
            f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {quantity}\n"
            f"–°—É–º–º–∞: {price}‚Ç∏\n"
            f"–ê–¥—Ä–µ—Å: {address}\n"
            f"–¢–µ–ª–µ—Ñ–æ–Ω: {phone}\n\n"
            f"–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è. –°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑! üíö\n"
            f"–ù–∞–ø–∏—à–∏—Ç–µ '–º–µ–Ω—é' —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞"
        )

        user_state.pop(from_number)
        return str(resp)

    msg.body("üòï –Ø –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª. –ù–∞–ø–∏—à–∏—Ç–µ '–º–µ–Ω—é' —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞.")
    return str(resp)

# ‚úÖ START SERVER (Only once)
if __name__ == "__main__":
    port = int(os.environ.get("PORT", 5000))
    app.run(host="0.0.0.0", port=port)

