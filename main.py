from flask import Flask, request
from twilio.twiml.messaging_response import MessagingResponse
from dotenv import load_dotenv
import psycopg2
import os
import datetime

load_dotenv()
app = Flask(__name__)

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
try:
    conn = psycopg2.connect(os.getenv("DATABASE_URL"))
    cursor = conn.cursor()
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ: {e}")
    exit(1)

# –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_state = {}

@app.route("/", methods=["GET"])
def health():
    return "‚úÖ App is running!"

@app.route("/whatsapp", methods=["POST"])
def whatsapp():
    from_number = request.form.get("From")
    user_msg = request.form.get("Body", "").strip()

    print(f"[{datetime.datetime.now()}] From: {from_number}, Msg: {user_msg}")

    state = user_state.get(from_number, {"step": "–º–µ–Ω—é"})
    resp = MessagingResponse()
    msg = resp.message()

    # –ö–æ–º–∞–Ω–¥–∞ —Å–±—Ä–æ—Å–∞
    if user_msg.lower() in ("–ø—Ä–∏–≤–µ—Ç", "–º–µ–Ω—é", "–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ"):
        state = {"step": "–º–µ–Ω—é"}
        msg.body(
            "üëã –ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à WhatsApp-–º–∞–≥–∞–∑–∏–Ω –º—ã–ª–∞-–ø–µ–Ω–∫–∏!\n\n"
            "üåø –ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π —Å–æ—Å—Ç–∞–≤, –Ω–µ–∂–Ω–∞—è –ø–µ–Ω–∞ –∏ –∑–∞–±–æ—Ç–∞ –æ —Å–µ–±–µ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.\n\n"
            "–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?\n"
            "1Ô∏è‚É£ –ó–∞–∫–∞–∑–∞—Ç—å –º—ã–ª–æ\n"
            "2Ô∏è‚É£ –£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ\n\n"
            "–í–≤–µ–¥–∏—Ç–µ 1 –∏–ª–∏ 2:"
        )
        user_state[from_number] = state
        return str(resp)

    # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    if state["step"] == "–º–µ–Ω—é":
        if user_msg == "1":
            state["step"] = "ask_quantity"
            msg.body("üßº –°–∫–æ–ª—å–∫–æ —à—Ç—É–∫ –º—ã–ª–∞ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å?")
        elif user_msg == "2":
            msg.body(
                "üß¥ *–û –ø—Ä–æ–¥—É–∫—Ç–µ*\n"
                "‚Ä¢ –ú—ã–ª–æ-–ø–µ–Ω–∫–∞ –¥–ª—è –∏–Ω—Ç–∏–º–Ω–æ–π –≥–∏–≥–∏–µ–Ω—ã.\n"
                "‚Ä¢ –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–π –∫–æ–∂–∏.\n"
                "‚Ä¢ –ë–µ–∑ —Å–ø–∏—Ä—Ç–∞ –∏ –æ—Ç–¥—É—à–µ–∫.\n"
                "‚Ä¢ –û–±—ä—ë–º: 30 –º–ª —Å –ø–æ–º–ø–æ–π.\n"
                "‚Ä¢ –¶–µ–Ω–∞: 1800‚Ç∏ –∑–∞ —à—Ç—É–∫—É.\n\n"
                "–ù–∞–ø–∏—à–∏—Ç–µ *–º–µ–Ω—é*, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è."
            )
        else:
            msg.body("‚ùó –í–≤–µ–¥–∏—Ç–µ 1 —á—Ç–æ–±—ã –∑–∞–∫–∞–∑–∞—Ç—å –∏–ª–∏ 2 —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ.")
        user_state[from_number] = state
        return str(resp)

    # –®–∞–≥ 1 ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
    if state["step"] == "ask_quantity":
        if user_msg.isdigit():
            quantity = int(user_msg)
            price = quantity * 1800
            state.update({
                "quantity": quantity,
                "price": price,
                "step": "ask_name"
            })
            msg.body(f"üî¢ {quantity} —à—Ç—É–∫ –±—É–¥–µ—Ç —Å—Ç–æ–∏—Ç—å {price}‚Ç∏.\n\n–£–∫–∞–∂–∏—Ç–µ –≤–∞—à–µ –∏–º—è:")
        else:
            msg.body("‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.")
        user_state[from_number] = state
        return str(resp)

    # –®–∞–≥ 2 ‚Äî –∏–º—è
    if state["step"] == "ask_name":
        name = user_msg.strip().title()
        state.update({
            "name": name,
            "step": "ask_address"
        })
        msg.body(f"–°–ø–∞—Å–∏–±–æ, {name}!\n–¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏:")
        user_state[from_number] = state
        return str(resp)

    # –®–∞–≥ 3 ‚Äî –∞–¥—Ä–µ—Å
    if state["step"] == "ask_address":
        address = user_msg.strip()
        state.update({
            "address": address,
            "step": "ask_phone"
        })
        msg.body("üìû –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
        user_state[from_number] = state
        return str(resp)

    # –®–∞–≥ 4 ‚Äî —Ç–µ–ª–µ—Ñ–æ–Ω –∏ —Ñ–∏–Ω–∞–ª–∏–∑–∞—Ü–∏—è
    if state["step"] == "ask_phone":
        phone = user_msg.strip()
        name = state["name"]
        quantity = state["quantity"]
        price = state["price"]
        address = state["address"]

        try:
            cursor.execute(
                "INSERT INTO orders (name, quantity, price, address, phone) VALUES (%s, %s, %s, %s, %s) RETURNING id",
                (name, quantity, price, address, phone)
            )
            order_id = cursor.fetchone()[0]
            conn.commit()
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ –ë–î: {e}")
            msg.body("‚ùó –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
            return str(resp)

        msg.body(
            f"‚úÖ –í–∞—à –∑–∞–∫–∞–∑ ‚Ññ{order_id} –ø—Ä–∏–Ω—è—Ç!\n\n"
            f"–ò–º—è: {name}\n"
            f"–ö–æ–ª-–≤–æ: {quantity} —à—Ç\n"
            f"–°—É–º–º–∞: {price}‚Ç∏\n"
            f"–ê–¥—Ä–µ—Å: {address}\n"
            f"–¢–µ–ª–µ—Ñ–æ–Ω: {phone}\n\n"
            "–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è. –°–ø–∞—Å–∏–±–æ! üíö"
        )

        user_state.pop(from_number)
        return str(resp)

    # –ó–∞–ø–∞—Å–Ω–æ–π –ø—É—Ç—å
    msg.body("‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ. –ù–∞–ø–∏—à–∏—Ç–µ '–º–µ–Ω—é' —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ.")
    return str(resp)

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
if __name__ == "__main__":
    port = int(os.environ.get("PORT", 5000))
    app.run(host="0.0.0.0", port=port)
